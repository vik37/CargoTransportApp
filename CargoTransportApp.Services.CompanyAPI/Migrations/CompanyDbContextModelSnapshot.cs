// <auto-generated />
using System;
using CargoTransportApp.Services.CompanyAPI.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CargoTransportApp.Services.CompanyAPI.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    partial class CompanyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CargoTransportApp.Services.CompanyAPI.DataAccess.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyRegisterKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyRole")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CraetedOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Green Street 12A",
                            City = "London",
                            CompanyRegisterKey = "9ffa2d7e-9d46-4a70-a810-f1838aefa876",
                            CompanyRole = 0,
                            Country = "United Kingdom",
                            CraetedOn = "",
                            DeletedOn = "",
                            Link = "foryou.com",
                            Name = "Cargo for you",
                            PostCode = 3698
                        },
                        new
                        {
                            Id = 2,
                            Address = "bul. ASNOM 23",
                            City = "Skopje",
                            CompanyRegisterKey = "ff3f4d99-4948-41b7-bbbe-2e9912967f77",
                            CompanyRole = 1,
                            Country = "Macedonia",
                            CraetedOn = "28/02/2016",
                            DeletedOn = "",
                            Link = "shipfaster.com.mk",
                            Name = "Ship faster",
                            PostCode = 1000
                        },
                        new
                        {
                            Id = 3,
                            Address = "Lascaris Wharf 239A",
                            City = "La Valleta",
                            CompanyRegisterKey = "9cb254cb-2c83-41bc-a75b-f73733060946",
                            CompanyRole = 1,
                            Country = "Malta",
                            CraetedOn = "04/19/2005",
                            DeletedOn = "",
                            Link = "https://www.visitmalta.com/en/info/valletta-malta/",
                            Name = "Malta ship",
                            PostCode = 1118
                        });
                });

            modelBuilder.Entity("CargoTransportApp.Services.CompanyAPI.DataAccess.Entities.DeliveryByDimension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Bigger")
                        .HasColumnType("int");

                    b.Property<int?>("Less")
                        .HasColumnType("int");

                    b.Property<double?>("PriceIncrease")
                        .HasColumnType("float");

                    b.Property<int>("ShippmentServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShippmentServiceId");

                    b.ToTable("DeliveryByDimensions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Less = 1000,
                            ShippmentServiceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Bigger = 1000,
                            Less = 2000,
                            PriceIncrease = 10.0,
                            ShippmentServiceId = 1
                        },
                        new
                        {
                            Id = 3,
                            Less = 1000,
                            ShippmentServiceId = 2
                        },
                        new
                        {
                            Id = 4,
                            Bigger = 1000,
                            Less = 1700,
                            PriceIncrease = 10.0,
                            ShippmentServiceId = 2
                        },
                        new
                        {
                            Id = 5,
                            Less = 1000,
                            ShippmentServiceId = 3
                        },
                        new
                        {
                            Id = 6,
                            Bigger = 1000,
                            Less = 2000,
                            PriceIncrease = 10.0,
                            ShippmentServiceId = 3
                        },
                        new
                        {
                            Id = 7,
                            Bigger = 2000,
                            Less = 5000,
                            PriceIncrease = 29.0,
                            ShippmentServiceId = 3
                        });
                });

            modelBuilder.Entity("CargoTransportApp.Services.CompanyAPI.DataAccess.Entities.DeliveryByWeight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Bigger")
                        .HasColumnType("int");

                    b.Property<bool>("ForEvery")
                        .HasColumnType("bit");

                    b.Property<int>("ForEveryKg")
                        .HasColumnType("int");

                    b.Property<double>("ForEveryPrice")
                        .HasColumnType("float");

                    b.Property<int?>("Less")
                        .HasColumnType("int");

                    b.Property<double?>("PriceIncrease")
                        .HasColumnType("float");

                    b.Property<int>("ShippmentServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShippmentServiceId");

                    b.ToTable("DeliveryByWeights");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ForEvery = false,
                            ForEveryKg = 0,
                            ForEveryPrice = 0.0,
                            Less = 2,
                            ShippmentServiceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Bigger = 2,
                            ForEvery = false,
                            ForEveryKg = 0,
                            ForEveryPrice = 0.0,
                            Less = 15,
                            PriceIncrease = 3.0,
                            ShippmentServiceId = 1
                        },
                        new
                        {
                            Id = 3,
                            Bigger = 15,
                            ForEvery = false,
                            ForEveryKg = 0,
                            ForEveryPrice = 0.0,
                            Less = 20,
                            PriceIncrease = 17.0,
                            ShippmentServiceId = 1
                        },
                        new
                        {
                            Id = 4,
                            Bigger = 10,
                            ForEvery = false,
                            ForEveryKg = 0,
                            ForEveryPrice = 0.0,
                            Less = 15,
                            ShippmentServiceId = 2
                        },
                        new
                        {
                            Id = 5,
                            Bigger = 15,
                            ForEvery = false,
                            ForEveryKg = 0,
                            ForEveryPrice = 0.0,
                            Less = 25,
                            PriceIncrease = 20.0,
                            ShippmentServiceId = 2
                        },
                        new
                        {
                            Id = 6,
                            Bigger = 25,
                            ForEvery = true,
                            ForEveryKg = 1,
                            ForEveryPrice = 0.41699999999999998,
                            PriceIncrease = 3.5,
                            ShippmentServiceId = 2
                        },
                        new
                        {
                            Id = 7,
                            Bigger = 10,
                            ForEvery = false,
                            ForEveryKg = 0,
                            ForEveryPrice = 0.0,
                            Less = 20,
                            ShippmentServiceId = 3
                        },
                        new
                        {
                            Id = 8,
                            Bigger = 20,
                            ForEvery = false,
                            ForEveryKg = 0,
                            ForEveryPrice = 0.0,
                            Less = 30,
                            PriceIncrease = 17.0,
                            ShippmentServiceId = 3
                        },
                        new
                        {
                            Id = 9,
                            Bigger = 30,
                            ForEvery = true,
                            ForEveryKg = 1,
                            ForEveryPrice = 0.40999999999999998,
                            PriceIncrease = 10.0,
                            ShippmentServiceId = 3
                        });
                });

            modelBuilder.Entity("CargoTransportApp.Services.CompanyAPI.DataAccess.Entities.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkPosition")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Id = "d7475312-f64d-42ee-8a1e-96d989a77bae",
                            CompanyId = 1,
                            Email = "adam@gmail.com",
                            Firstname = "Adam",
                            Lastname = "Stalone",
                            WorkPosition = "Manager"
                        });
                });

            modelBuilder.Entity("CargoTransportApp.Services.CompanyAPI.DataAccess.Entities.ShippmentService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<double>("InitialDimensionPrice")
                        .HasColumnType("float");

                    b.Property<double>("InitialWeightPrice")
                        .HasColumnType("float");

                    b.Property<int?>("MaximumDefaultDimension")
                        .HasColumnType("int");

                    b.Property<int?>("MaximumDefaultWeight")
                        .HasColumnType("int");

                    b.Property<int?>("MinimumDefaultDimension")
                        .HasColumnType("int");

                    b.Property<int?>("MinimumDefaultWeight")
                        .HasColumnType("int");

                    b.Property<int>("Parcel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("ShippmentServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            InitialDimensionPrice = 10.0,
                            InitialWeightPrice = 15.0,
                            MaximumDefaultDimension = 2000,
                            MaximumDefaultWeight = 20,
                            Parcel = 36
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 2,
                            InitialDimensionPrice = 11.99,
                            InitialWeightPrice = 16.5,
                            MaximumDefaultDimension = 1700,
                            MaximumDefaultWeight = 30,
                            MinimumDefaultWeight = 10,
                            Parcel = 18
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 3,
                            InitialDimensionPrice = 9.5,
                            InitialWeightPrice = 16.989999999999998,
                            MinimumDefaultDimension = 500,
                            MinimumDefaultWeight = 10,
                            Parcel = 26
                        });
                });

            modelBuilder.Entity("CargoTransportApp.Services.CompanyAPI.DataAccess.Entities.DeliveryByDimension", b =>
                {
                    b.HasOne("CargoTransportApp.Services.CompanyAPI.DataAccess.Entities.ShippmentService", "ShippmentService")
                        .WithMany("DeliveryByDimensions")
                        .HasForeignKey("ShippmentServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShippmentService");
                });

            modelBuilder.Entity("CargoTransportApp.Services.CompanyAPI.DataAccess.Entities.DeliveryByWeight", b =>
                {
                    b.HasOne("CargoTransportApp.Services.CompanyAPI.DataAccess.Entities.ShippmentService", "ShippmentService")
                        .WithMany("DeliveryByWeights")
                        .HasForeignKey("ShippmentServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShippmentService");
                });

            modelBuilder.Entity("CargoTransportApp.Services.CompanyAPI.DataAccess.Entities.Employee", b =>
                {
                    b.HasOne("CargoTransportApp.Services.CompanyAPI.DataAccess.Entities.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CargoTransportApp.Services.CompanyAPI.DataAccess.Entities.ShippmentService", b =>
                {
                    b.HasOne("CargoTransportApp.Services.CompanyAPI.DataAccess.Entities.Company", "Company")
                        .WithOne("ShippmentService")
                        .HasForeignKey("CargoTransportApp.Services.CompanyAPI.DataAccess.Entities.ShippmentService", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CargoTransportApp.Services.CompanyAPI.DataAccess.Entities.Company", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("ShippmentService");
                });

            modelBuilder.Entity("CargoTransportApp.Services.CompanyAPI.DataAccess.Entities.ShippmentService", b =>
                {
                    b.Navigation("DeliveryByDimensions");

                    b.Navigation("DeliveryByWeights");
                });
#pragma warning restore 612, 618
        }
    }
}
